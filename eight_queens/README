被朋友问八皇后的C语言代码，想到自己之前没写过八皇后，就动手用python实现了出来。

带后缀的是网友的python代码，效率更高；不带后缀的是我的实现，代码体积大，效率还低。


对比：
高效实现——判断冲突时巧妙地用abs做绝对值减法，避免了麻烦的比较；
		  只用到一个一维数组，用len(state)来表示下一行，数据利用巧妙；
		  递归逻辑清晰，容易理解；
		  
我的实现——判断冲突时行列一起判断，对角线使用2个迭代器进行判断，效率低下，在N>=10时极为明显；
		  用到了一个一位数组，但每个元素是一个坐标，没有意识到坐标的行实际和对应的数组索引一致，并且用了NxN的numpy.array来表示结果，在N增大时内存使用率飞速膨胀；
		  递归逻辑混乱，不易阅读；
		  
		  
思考过程：在看到问题描述后开始动手，刚开始没有明显地意识到要使用递归，在不断试错过程中开始意识到是用到递归的DFS，总共用时约5h.